@model ASM1.WebMVC.Models.CustomerCreateViewModel
@{
    ViewData["Title"] = "Add Customer";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="bi bi-person-plus"></i> Add New Customer</h2>
        <p class="text-muted">Create a new customer record</p>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0"><i class="bi bi-form"></i> Customer Information</h5>
    </div>
    <div class="card-body">
        <form asp-action="Add" method="post">
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="FullName" class="form-label">
                            <i class="bi bi-person"></i> Full Name <span class="text-danger">*</span>
                        </label>
                        <input asp-for="FullName" class="form-control" placeholder="Enter full name" />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">
                            <i class="bi bi-envelope"></i> Email <span class="text-danger">*</span>
                        </label>
                        <input asp-for="Email" class="form-control" placeholder="Enter email address" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Phone" class="form-label">
                            <i class="bi bi-telephone"></i> Phone
                        </label>
                        <input asp-for="Phone" class="form-control" placeholder="Enter phone number" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Birthday" class="form-label">
                            <i class="bi bi-calendar"></i> Birthday
                        </label>
                        <input asp-for="Birthday" class="form-control" type="date" />
                        <span asp-validation-for="Birthday" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <hr>
            
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-check-circle"></i> Create Customer
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            console.log('Add Customer page loaded');
            
            // Log form data khi submit
            $('form').on('submit', function(e) {
                console.log('=== FORM SUBMIT DEBUG ===');
                console.log('Form action:', $(this).attr('action'));
                console.log('Form method:', $(this).attr('method'));
                
                // Log tất cả form data
                var formData = {};
                $(this).serializeArray().forEach(function(item) {
                    formData[item.name] = item.value;
                });
                console.log('Form data:', formData);
                
                // Log validation state
                console.log('Form valid:', $(this).valid());
                console.log('Validation errors:', $(this).find('.field-validation-error').length);
                
                // Log session info từ browser (nếu có)
                console.log('Current URL:', window.location.href);
                console.log('User Agent:', navigator.userAgent);
                console.log('Timestamp:', new Date().toISOString());
            });
            
            // Log input changes
            $('input, select, textarea').on('change', function() {
                console.log('Input changed:', {
                    name: $(this).attr('name'),
                    value: $(this).val(),
                    type: $(this).attr('type')
                });
            });
            
            // Log validation errors
            $('form').on('invalid-form.validate', function(e) {
                console.log('=== VALIDATION ERRORS ===');
                var validator = $(this).validate();
                console.log('Invalid elements:', validator.numberOfInvalids());
                console.log('Error messages:', validator.errorList);
            });
        });
    </script>
}
